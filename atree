#!/usr/bin/env python3

import sys
from pathlib import Path
import re
import argparse

if __name__ != "__main__":
    sys.exit(1)

# 默认无视的目录
K_IGNORE = [
    ".git",
    "node_modules",
    ".venv",
    "venv",
    "env",
    ".env",
    "__pycache__",
    ".idea",
    ".vscode",
]
SPACE_1 = "|-- "
SPACE_2 = "`-- "

parser = argparse.ArgumentParser(
    prog="atree",
    description="打印目录树",
    formatter_class=argparse.ArgumentDefaultsHelpFormatter,
)

parser.add_argument("dir", type=str, nargs="?", default=".", help="需要遍历的根目录")
parser.add_argument("-i", nargs="+", default=K_IGNORE, help="需要忽略的目录")
parser.add_argument("-c", type=int, default=0, help="目录查询层数")

args = parser.parse_args()

# 忽略目录
args.i = list(set(args.i + K_IGNORE))

# 递归打印
def scan(p: Path, space="", dir_deep_count=1):
    last_index: int = len(list(p.iterdir())) - 1
    for i, x in enumerate(p.iterdir()):
        is_last: bool = i == last_index

        space1 = re.sub(r"\|--.*$", SPACE_2, space) if is_last else space
        print(f"{space1}{x.name}")

        if x.is_dir() and x.name not in args.i:

            if is_last:
                space2 = re.sub(r"\|--", " " * 3, space) + SPACE_1
            else:
                space2 = re.sub(r"--", " " * 2, space) + SPACE_1

            if args.c > 0:
                if dir_deep_count + 1 > args.c:
                    continue

                scan(x, space2, dir_deep_count + 1)
            else:
                scan(x, space2)


scan(Path(getattr(args, "dir")), SPACE_1)
